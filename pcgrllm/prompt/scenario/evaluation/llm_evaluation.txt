# Task
Evaluate the generated content (level) based on the following evaluation criteria and provide scores for each metric.

## Criteria
The scenario involves a player who must pick up a key and reach the door to complete the level.
While traversing the level, the player may encounter enemies specified in the "Generation Goal" prompt (e.g., BAT, SCORPION).
The "important tiles" refer to the tiles described in the "Generation Goal."
The player can only pass through empty tiles, as well as tiles containing the key and the door.

Each score is measured with the score range of 0 to 1.
- **Accuracy of Important Tiles (`acc_imp_perc`)**:
How much the "Generated Contents" satisfy the "Generation Goal", the higher value denotes the better accuracy and looks like reasonable game level.
Measures the percentage of important tiles that are the player encounters until clearing the level.
The player should not encounter any enemies which not included in the "important tiles".

## Output
Return the similarity and diversity scores as a json string.
Return a JSON string with all metric scores. Provide reasons for the scores and include them in a summary after the JSON output.
If there are multiple content in the "Generated Contents", response with averaged scores for each metric.

### Output Example (JSON)
```
{
    "acc_imp_perc": (0.00 ~ 1.00, 3-point float)
}
```

** Generated Contents **
Evaluating the following contents which is generated by the model.

class Dungeon3Tiles(IntEnum):
    BORDER = 0      # Non-passable
    EMPTY = 1       # Passable
    WALL = 2        # Non-passable
    PLAYER = 3      # Start-point
    BAT = 4         # Non-passable (enemy)
    SCORPION = 5    # Non-passable (enemy)
    SPIDER = 6      # Non-passable (enemy)
    KEY = 7         # Non-passable
    DOOR = 8        # Goal-point

{content}

** Generation Goal **
{evaluation_criteria}

**Response**
You have to response with step-by-step from some reasons with sub-scores to the total score.
"""